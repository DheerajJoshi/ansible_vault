---

- name: VAULT | Install prerequisites
  package:
    name:
      - unzip
    state: present

- name: VAULT | Manage users
  import_tasks: users.yml

- name: VAULT | Create directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0755
  with_items:
    - { path: "{{ vault_config_dir }}", owner: root, group: root }
    - { path: "{{ vault_data_dir }}", owner: "{{ vault_user }}", group: "{{ vault_group }}" }
    - { path: "{{ vault_log_dir }}", owner: "{{ vault_user }}", group: "{{ vault_group }}" }
    - { path: "{{ vault_run_dir }}", owner: root, group: root }

- name: VAULT | Download and unzip binary
  unarchive:
    src: "{{ vault_bin_url }}"
    dest: "{{ vault_home_dir }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    remote_src: true
    creates: "{{ vault_home_dir }}/vault"

- name: VAULT | Configuration
  template:
    src: etc/vault.d/vault_main.hcl.j2
    dest: "{{ vault_config_file }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0644
  notify: Restart vault

- name: VAULT | Manage log rotation
  template:
    src: etc/logrotate.d//vault.j2
    dest: /etc/logrotate.d/vault
    owner: root
    group: root
    mode: 0644

- name: VAULT | Manage Systemd
  template:
    src: lib/systemd/system/vault.service.j2
    dest: /lib/systemd/system/vault.service
    owner: root
    group: root
    mode: 0644
  notify: Restart vault
